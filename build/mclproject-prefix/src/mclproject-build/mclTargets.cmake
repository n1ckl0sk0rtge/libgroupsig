# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.19)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget mcl::mcl mcl::mcl_st mcl::mclbn256 mcl::mclbn384 mcl::mclbn384_256)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target mcl::mcl
add_library(mcl::mcl SHARED IMPORTED)

set_target_properties(mcl::mcl PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "MCL_NO_AUTOLINK;MCLBN_NO_AUTOLINK;MCL_USE_LLVM=1;MCL_USE_VINT;MCL_VINT_FIXED_BUFFER;MCL_DONT_USE_OPENSSL"
  INTERFACE_COMPILE_FEATURES "cxx_std_11"
  INTERFACE_INCLUDE_DIRECTORIES "/Users/nicklas/_projects/libgroupsig/build/mclproject-prefix/src/mclproject/include"
)

# Create imported target mcl::mcl_st
add_library(mcl::mcl_st STATIC IMPORTED)

set_target_properties(mcl::mcl_st PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "MCL_NO_AUTOLINK;MCLBN_NO_AUTOLINK;MCL_USE_LLVM=1;MCL_USE_VINT;MCL_VINT_FIXED_BUFFER;MCL_DONT_USE_OPENSSL"
  INTERFACE_COMPILE_FEATURES "cxx_std_11"
  INTERFACE_INCLUDE_DIRECTORIES "/Users/nicklas/_projects/libgroupsig/build/mclproject-prefix/src/mclproject/include"
)

# Create imported target mcl::mclbn256
add_library(mcl::mclbn256 SHARED IMPORTED)

set_target_properties(mcl::mclbn256 PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "MCL_NO_AUTOLINK;MCLBN_NO_AUTOLINK"
  INTERFACE_LINK_LIBRARIES "mcl::mcl"
)

# Create imported target mcl::mclbn384
add_library(mcl::mclbn384 SHARED IMPORTED)

set_target_properties(mcl::mclbn384 PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "MCL_NO_AUTOLINK;MCLBN_NO_AUTOLINK"
  INTERFACE_LINK_LIBRARIES "mcl::mcl"
)

# Create imported target mcl::mclbn384_256
add_library(mcl::mclbn384_256 SHARED IMPORTED)

set_target_properties(mcl::mclbn384_256 PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "MCL_NO_AUTOLINK;MCLBN_NO_AUTOLINK"
  INTERFACE_LINK_LIBRARIES "mcl::mcl"
)

# Import target "mcl::mcl" for configuration "Release"
set_property(TARGET mcl::mcl APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(mcl::mcl PROPERTIES
  IMPORTED_LOCATION_RELEASE "/Users/nicklas/_projects/libgroupsig/build/mclproject-prefix/src/mclproject-build/lib/libmcl.1.22.dylib"
  IMPORTED_SONAME_RELEASE "@rpath/libmcl.1.dylib"
  )

# Import target "mcl::mcl_st" for configuration "Release"
set_property(TARGET mcl::mcl_st APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(mcl::mcl_st PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "ASM;CXX"
  IMPORTED_LOCATION_RELEASE "/Users/nicklas/_projects/libgroupsig/build/mclproject-prefix/src/mclproject-build/lib/libmcl.a"
  )

# Import target "mcl::mclbn256" for configuration "Release"
set_property(TARGET mcl::mclbn256 APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(mcl::mclbn256 PROPERTIES
  IMPORTED_LOCATION_RELEASE "/Users/nicklas/_projects/libgroupsig/build/mclproject-prefix/src/mclproject-build/lib/libmclbn256.1.22.dylib"
  IMPORTED_SONAME_RELEASE "@rpath/libmclbn256.1.dylib"
  )

# Import target "mcl::mclbn384" for configuration "Release"
set_property(TARGET mcl::mclbn384 APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(mcl::mclbn384 PROPERTIES
  IMPORTED_LOCATION_RELEASE "/Users/nicklas/_projects/libgroupsig/build/mclproject-prefix/src/mclproject-build/lib/libmclbn384.1.22.dylib"
  IMPORTED_SONAME_RELEASE "@rpath/libmclbn384.1.dylib"
  )

# Import target "mcl::mclbn384_256" for configuration "Release"
set_property(TARGET mcl::mclbn384_256 APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(mcl::mclbn384_256 PROPERTIES
  IMPORTED_LOCATION_RELEASE "/Users/nicklas/_projects/libgroupsig/build/mclproject-prefix/src/mclproject-build/lib/libmclbn384_256.1.22.dylib"
  IMPORTED_SONAME_RELEASE "@rpath/libmclbn384_256.1.dylib"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
